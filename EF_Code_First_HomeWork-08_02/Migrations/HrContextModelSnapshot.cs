// <auto-generated />
using System;
using EF_Code_First_HomeWork_08_02.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_Code_First_HomeWork_08_02.Migrations
{
    [DbContext(typeof(HrContext))]
    partial class HrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("CountryId");

                    b.HasIndex("RegionId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("LocationId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommissionPct")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Job", b =>
                {
                    b.Property<string>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<decimal>("MaxSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinSalary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.JobGrade", b =>
                {
                    b.Property<string>("GradeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<decimal>("HighestSal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowestSal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GradeLevel");

                    b.ToTable("JobGrades");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.JobHistory", b =>
                {
                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobId")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StartDate");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("JobId");

                    b.ToTable("JobHistories");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("LocationId");

                    b.HasIndex("CountryId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Country", b =>
                {
                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Region", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Department", b =>
                {
                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Location", "Location")
                        .WithMany("Departments")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Employee", b =>
                {
                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.JobHistory", b =>
                {
                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Department", "Department")
                        .WithMany("JobHistories")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Employee", "Employee")
                        .WithMany("JobHistories")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Job", "Job")
                        .WithMany("JobHistories")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("EF_Code_First_HomeWork_08_02.Model.Location", b =>
                {
                    b.HasOne("EF_Code_First_HomeWork_08_02.Model.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
